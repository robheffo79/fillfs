.\" Manpage for fillfs
.\" Contact: Robert Heffernan
.\" License: MIT
.\" Date: 14th January 2025
.TH fillfs 1 "14 Jan 2025" "fillfs Utility" "User Commands"
.SH NAME
fillfs \- fill a filesystem or overwrite a file until a specified size is reached or the disk is full
.SH SYNOPSIS
.B fillfs
[\fB-r\fR | \fB--random\fR]
[\fB-z\fR | \fB--zero\fR]
[\fB-s\fR | \fB--status\fR]
[\fB-b\fR | \fB--block-size\fR=SIZE]
[\fB-h\fR | \fB--help\fR]
.I <mount_point_or_file> [size]

.SH DESCRIPTION
The
.B fillfs
utility behaves differently depending on whether
.I <mount_point_or_file>
refers to a directory or an existing file:

.IP \(bu 4
If it is **a directory**, fillfs creates a hidden file (by default
.BR /.fillfs )
in that directory and writes data to it until either the disk is filled or a specified size is reached.  
In this mode, if fillfs terminates normally or via most signals, the hidden file is automatically removed.  
However, if forcibly killed with \fBkill -9\fR (\fBSIGKILL\fR), fillfs cannot clean up.

.IP \(bu 4
If it is **an existing file**, fillfs overwrites that file in-place without removing it afterward.  
Optionally, you may specify a \fIsize\fR argument: if no size is given (or \fBSIZE_MAX\fR in code), the entire file is overwritten.  
If a size larger than the file is specified, fillfs overwrites only up to the file's actual size.  
If forcibly killed, no further writes occur and no cleanup is attempted on the file itself.

By default, fillfs writes zeroed data, but it can write random data (\fB--random\fR).  
It can also print status updates (progress, ETA, throughput) when \fB--status\fR is provided.

.SH OPTIONS
.TP
\fB-r, --random\fR
Write random data instead of zeroed data.

.TP
\fB-z, --zero\fR
Explicitly write zeroed data (overrides \fB--random\fR if both are used).

.TP
\fB-s, --status\fR
Show periodic status updates, including throughput and estimated time remaining (ETA).

.TP
\fB-b, --block-size=SIZE\fR
Use a custom block size for writes. Defaults to \fB32M\fR if not specified.  
The argument may include a suffix (e.g., \fB4K\fR, \fB32M\fR, \fB1G\fR, etc.).

.TP
\fB-h, --help\fR
Show a help message and exit.

.SH ARGUMENTS
.TP
\fI<mount_point_or_file>\fR
Required. A directory path (e.g. \fB/\fR or \fB/mnt/data\fR) or an existing file path (\fB/tmp/existing_file\fR).  
If a directory is specified, fillfs creates a hidden file (/.fillfs) which is automatically removed upon exit (except if forcibly killed).  
If an existing file is specified, fillfs overwrites data in that file and does not remove it.

.TP
\fIsize\fR
Optional. Human-readable size for the fill or overwrite operation (e.g., \fB1G\fR, \fB800M\fR, \fB32K\fR).  
If not provided and a directory is used, fillfs continues until the filesystem is full (\fBENOSPC\fR).  
If not provided and a file is used, fillfs overwrites the entire file.

.SH EXAMPLES
.TP
Fill 1 GB on the root filesystem, showing status updates:
.RS
.nf
fillfs / --status 1G
.fi
.RE

.TP
Fill until the disk is completely full at \fB/mnt/data\fR with zero data:
.RS
.nf
fillfs /mnt/data
.fi
.RE

.TP
Use random data for 10 GB with a custom 4M block size:
.RS
.nf
fillfs -r -s -b 4M /mnt/data 10G
.fi
.RE

.TP
Overwrite an existing file up to 500 MB (without removing it):
.RS
.nf
fillfs /tmp/existing_file 500M
.fi
.RE

.SH FILES
In directory mode, fillfs creates a hidden file named
.B /.fillfs
in the specified directory.  
This file is removed automatically upon a normal or signal-induced exit (other than \fBSIGKILL\fR).  
If a regular file is specified, fillfs uses and overwrites that file directly, leaving it in place after completion.

.SH EXIT STATUS
.TP
0
Success.
.TP
Non-zero
An error occurred or the program was interrupted.

.SH AUTHOR
Robert Heffernan <robert@heffernantech.au>

.SH COPYRIGHT AND LICENSE
Licensed under the MIT License.
.PP
Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
.PP
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
.PP
THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
